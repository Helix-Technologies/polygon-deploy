apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "bor.fullname" . }}
  labels:
    app: {{ template "bor.name" . }}
    chart: {{ template "bor.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  serviceName: {{ template "bor.name" . }}
  selector:
    matchLabels:
      app: {{ template "bor.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "bor.name" . }}
        release: {{ .Release.Name }}
{{- include "bor.statefulset.annotations" . | nindent 8 }}
    spec:
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
      - name: init
        command: ["sh", "-c", "test -f /data/.is_initialized || (wget {{ .Values.bor.genesisUrl }} -O /data/genesis.json && bor --datadir /data init /data/genesis.json && touch /data/.is_initialized)"]
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        workingDir: /data
        imagePullPolicy: IfNotPresent
        volumeMounts:
          - name: data
            mountPath: /data
      {{ if .Values.bor.use_snaphsot }}
      - name: snapshot
        command: ["sh", "-c", "test -f /data/.downloaded || (wget -qO- {{ .Values.bor.snapshotUrl }} | tar xzvf - -C /data/bor/chaindata && touch /data/.downloaded )"]
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        workingDir: /data
        imagePullPolicy: IfNotPresent
        volumeMounts:
          - name: data
            mountPath: /data
      {{- end }}
      - name: remove-lock
        command:
        - rm
        - -f
        - /data/bor/LOCK
        image: busybox
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: data
          mountPath: /data
      - name: remove-nodekey
        command:
        - rm
        - -f
        - /data/bor/nodekey
        image: busybox
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: data
          mountPath: /data
      containers:
      {{- if .Values.proxy.enabled }}
      - name: {{ template "bor.fullname" . }}-proxy
        image: "{{ .Values.proxy.image.repository }}:{{ .Values.proxy.image.tag }}"
        imagePullPolicy: {{ .Values.proxy.image.pullPolicy | quote }}
        ports:
        - name: http
          containerPort: {{ .Values.proxy.http.port }}
        - name: proxy-ws
          containerPort: {{ .Values.proxy.ws.port }}
        env:
        - name: OTP_SECRET
          value: {{ .Values.proxy.otpSecret | quote }}
      {{- end }}
      - name: {{ template "bor.fullname" . }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        command: ["/usr/local/bin/bor"]
        args: {{- include "bor.args" . | nindent 10 }}
        ports:
        - name: http-rpc
          containerPort: {{ .Values.httpRPC.port }}
        - name: ws-rpc
          containerPort: {{ .Values.wsRPC.port }}
        - name: networkport-tcp
          containerPort: {{ .Values.networkPort.portTCP }}
        - name: monitoring
          containerPort: 6060
        - name: networkport-udp
          containerPort: {{ .Values.networkPort.portUDP }}
          protocol: UDP
        {{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          {{- if and .Values.livenessProbe.exec (kindIs "string" .Values.livenessProbe.exec.command) }}
          {{- omit .Values.livenessProbe "enabled" "exec" | toYaml | nindent 10 }}
          exec:
            command:
              {{- tpl .Values.livenessProbe.exec.command . | nindent 14 }}
          {{- else }}
          {{- omit .Values.livenessProbe "enabled" | toYaml | nindent 10 }}
          {{- end }}
        {{- end }}
        {{- if .Values.readinessProbe.enabled }}
        readinessProbe:
          {{- if and .Values.readinessProbe.exec (kindIs "string" .Values.readinessProbe.exec.command) }}
          {{- omit .Values.readinessProbe "enabled" "exec" | toYaml | nindent 10 }}
          exec:
            command:
              {{- tpl .Values.readinessProbe.exec.command . | nindent 14 }}
          {{- else }}
          {{- omit .Values.readinessProbe "enabled" | toYaml | nindent 10 }}
          {{- end }}
        {{- end }}
        volumeMounts:
        - name: data
          mountPath: /data
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
  volumeClaimTemplates:
  - metadata:
      name: data
      annotations:
        "helm.sh/resource-policy": keep
      labels:
        app: {{ template "bor.name" . }}
        chart: {{ template "bor.chart" . }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
        {{- if .Values.persistence.snapshotValue }}
        snapshot: {{ .Values.persistence.snapshotValue }}
        {{- end }}
    spec:
      accessModes:
      - "ReadWriteOnce"
      storageClassName: premium-rwo
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
